<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-0TK5P9S" failures="2" tests="7" name="test.FactorialTest" time="28.482" errors="0" timestamp="2021-03-20T09:20:49 CST" skipped="0">
  <testcase classname="test.FactorialTest" name="factorialTest" time="0.883"/>
  <system-out/>
  <testcase classname="test.FactorialTest" name="factorialTest" time="3.788"/>
  <system-out/>
  <testcase classname="test.FactorialTest" name="factorialTest" time="8.596">
    <failure message="Element should have text &#039;The factorial of 1009 is:&#039; {#resultDiv}
Element: &#039;&lt;p class=&quot;text-center top-space-20&quot; id=&quot;resultDiv&quot;&gt;&lt;/p&gt;&#039;
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.html
Timeout: 5 s." type="com.codeborne.selenide.ex.ElementShould">
      <![CDATA[Element should have text 'The factorial of 1009 is:' {#resultDiv}
Element: '<p class="text-center top-space-20" id="resultDiv"></p>'
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.html
Timeout: 5 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:155)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:128)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:80)
at com.sun.proxy.$Proxy8.shouldHave(Unknown Source)
at test.FactorialTest.factorialTest(FactorialTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
    </failure>
  </testcase> <!-- factorialTest -->
  <system-out/>
  <testcase classname="test.FactorialTest" name="factorialNegativeTest" time="7.228">
    <failure message="Element should have text &#039;Please enter an integer&#039; {#resultDiv}
Element: &#039;&lt;p class=&quot;text-center top-space-20&quot; id=&quot;resultDiv&quot;&gt;&lt;/p&gt;&#039;
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.html
Timeout: 5 s." type="com.codeborne.selenide.ex.ElementShould">
      <![CDATA[Element should have text 'Please enter an integer' {#resultDiv}
Element: '<p class="text-center top-space-20" id="resultDiv"></p>'
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.html
Timeout: 5 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:155)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:128)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:80)
at com.sun.proxy.$Proxy8.shouldHave(Unknown Source)
at test.FactorialTest.factorialNegativeTest(FactorialTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
    </failure>
  </testcase> <!-- factorialNegativeTest -->
  <system-out/>
  <testcase classname="test.FactorialTest" name="factorialNegativeTest" time="0.467"/>
  <system-out/>
  <testcase classname="test.FactorialTest" name="factorialNegativeTest" time="0.607"/>
  <system-out/>
  <testcase classname="test.FactorialTest" name="factorialNegativeTest" time="6.913"/>
  <system-out/>
</testsuite> <!-- test.FactorialTest -->
