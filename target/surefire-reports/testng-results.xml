<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="11" passed="6" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-20T09:20:10 CST" name="Suite" finished-at="2021-03-20T09:20:49 CST" duration-ms="38899">
    <groups>
    </groups>
    <test started-at="2021-03-20T09:20:10 CST" name="Hodinkee Test" finished-at="2021-03-20T09:20:49 CST" duration-ms="38899">
      <class name="test.NavigationTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:39 CST" name="beforeMethod" finished-at="2021-03-20T09:20:39 CST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLinks(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:39 CST" name="verifyLinks" data-provider="linksData" finished-at="2021-03-20T09:20:39 CST" duration-ms="235" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Terms and Conditions]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://qainterview.pythonanywhere.com/terms]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[This is the terms and conditions document. We are not yet ready with it. Stay tuned!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://qainterview.pythonanywhere.com/terms] but found [http://qainterview.pythonanywhere.com/privacy]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://qainterview.pythonanywhere.com/terms] but found [http://qainterview.pythonanywhere.com/privacy]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at test.NavigationTest.verifyLinks(NavigationTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinks -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:39 CST" name="afterMethod" finished-at="2021-03-20T09:20:40 CST" duration-ms="714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLinks status=FAILURE method=NavigationTest.verifyLinks(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:test.NavigationTest@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:40 CST" name="beforeMethod" finished-at="2021-03-20T09:20:43 CST" duration-ms="2802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLinks(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:43 CST" name="verifyLinks" data-provider="linksData" finished-at="2021-03-20T09:20:43 CST" duration-ms="238" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Privacy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://qainterview.pythonanywhere.com/privacy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[This is the privacy document. We are not yet ready with it. Stay tuned!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://qainterview.pythonanywhere.com/privacy] but found [http://qainterview.pythonanywhere.com/terms]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://qainterview.pythonanywhere.com/privacy] but found [http://qainterview.pythonanywhere.com/terms]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at test.NavigationTest.verifyLinks(NavigationTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinks -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:43 CST" name="afterMethod" finished-at="2021-03-20T09:20:44 CST" duration-ms="728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLinks status=FAILURE method=NavigationTest.verifyLinks(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:test.NavigationTest@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:44 CST" name="beforeMethod" finished-at="2021-03-20T09:20:46 CST" duration-ms="2811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLinks(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:46 CST" name="verifyLinks" data-provider="linksData" finished-at="2021-03-20T09:20:49 CST" duration-ms="2707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Qxf2 Services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://qxf2.com/?utm_source=qa-interview&utm_medium=click&utm_campaign=From%20QA%20Interview]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[QA for startups]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinks -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.NavigationTest@2f8dad04]" started-at="2021-03-20T09:20:49 CST" name="afterMethod" finished-at="2021-03-20T09:20:49 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLinks status=SUCCESS method=NavigationTest.verifyLinks(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:test.NavigationTest@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.NavigationTest -->
      <class name="test.FactorialTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:10 CST" name="setUp" finished-at="2021-03-20T09:20:10 CST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:10 CST" name="beforeMethod" finished-at="2021-03-20T09:20:16 CST" duration-ms="5761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialTest(java.lang.String,java.lang.String)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:16 CST" name="factorialTest" data-provider="data" finished-at="2021-03-20T09:20:17 CST" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zero]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:17 CST" name="afterMethod" finished-at="2021-03-20T09:20:17 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialTest status=SUCCESS method=FactorialTest.factorialTest(java.lang.String,java.lang.String)[pri:0, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:17 CST" name="beforeMethod" finished-at="2021-03-20T09:20:17 CST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialTest(java.lang.String,java.lang.String)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:17 CST" name="factorialTest" data-provider="data" finished-at="2021-03-20T09:20:18 CST" duration-ms="753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Between 1 and 3 Digits]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:18 CST" name="afterMethod" finished-at="2021-03-20T09:20:18 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialTest status=SUCCESS method=FactorialTest.factorialTest(java.lang.String,java.lang.String)[pri:0, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:18 CST" name="beforeMethod" finished-at="2021-03-20T09:20:18 CST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialTest(java.lang.String,java.lang.String)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:18 CST" name="factorialTest" data-provider="data" finished-at="2021-03-20T09:20:24 CST" duration-ms="5792" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Four or More Digits]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1009]]>
              </value>
            </param>
          </params>
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should have text 'The factorial of 1009 is:' {#resultDiv}
Element: '<p class="text-center top-space-20" id="resultDiv"></p>'
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.html
Timeout: 5 s.]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should have text 'The factorial of 1009 is:' {#resultDiv}
Element: '<p class="text-center top-space-20" id="resultDiv"></p>'
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253623885.0.html
Timeout: 5 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:155)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:128)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:80)
at com.sun.proxy.$Proxy8.shouldHave(Unknown Source)
at test.FactorialTest.factorialTest(FactorialTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:24 CST" name="afterMethod" finished-at="2021-03-20T09:20:25 CST" duration-ms="1264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialTest status=FAILURE method=FactorialTest.factorialTest(java.lang.String,java.lang.String)[pri:0, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:25 CST" name="beforeMethod" finished-at="2021-03-20T09:20:28 CST" duration-ms="2858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:28 CST" name="factorialNegativeTest" data-provider="negativeData" finished-at="2021-03-20T09:20:34 CST" duration-ms="5829" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Negative Integers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should have text 'Please enter an integer' {#resultDiv}
Element: '<p class="text-center top-space-20" id="resultDiv"></p>'
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.html
Timeout: 5 s.]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should have text 'Please enter an integer' {#resultDiv}
Element: '<p class="text-center top-space-20" id="resultDiv"></p>'
Screenshot: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.png
Page source: file:/C:/Users/drivas/Documents/HodinkeeCodeChallenge/target/screenshot/1616253633873.1.html
Timeout: 5 s.
at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)
at com.codeborne.selenide.commands.Should.execute(Should.java:30)
at com.codeborne.selenide.commands.Should.execute(Should.java:14)
at com.codeborne.selenide.commands.Commands.execute(Commands.java:155)
at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:128)
at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:80)
at com.sun.proxy.$Proxy8.shouldHave(Unknown Source)
at test.FactorialTest.factorialNegativeTest(FactorialTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialNegativeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:34 CST" name="afterMethod" finished-at="2021-03-20T09:20:34 CST" duration-ms="727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialNegativeTest status=FAILURE method=FactorialTest.factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:34 CST" name="beforeMethod" finished-at="2021-03-20T09:20:37 CST" duration-ms="2804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:37 CST" name="factorialNegativeTest" data-provider="negativeData" finished-at="2021-03-20T09:20:38 CST" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Decimals]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25.32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialNegativeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:38 CST" name="afterMethod" finished-at="2021-03-20T09:20:38 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialNegativeTest status=SUCCESS method=FactorialTest.factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:38 CST" name="beforeMethod" finished-at="2021-03-20T09:20:38 CST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:38 CST" name="factorialNegativeTest" data-provider="negativeData" finished-at="2021-03-20T09:20:38 CST" duration-ms="405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Non Numeric]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Alphabet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialNegativeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:38 CST" name="afterMethod" finished-at="2021-03-20T09:20:38 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialNegativeTest status=SUCCESS method=FactorialTest.factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:38 CST" name="beforeMethod" finished-at="2021-03-20T09:20:38 CST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:38 CST" name="factorialNegativeTest" data-provider="negativeData" finished-at="2021-03-20T09:20:39 CST" duration-ms="315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialNegativeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.FactorialTest@79da8dc5]" started-at="2021-03-20T09:20:39 CST" name="afterMethod" finished-at="2021-03-20T09:20:39 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=factorialNegativeTest status=SUCCESS method=FactorialTest.factorialNegativeTest(java.lang.String,java.lang.String)[pri:1, instance:test.FactorialTest@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.FactorialTest -->
    </test> <!-- Hodinkee Test -->
  </suite> <!-- Suite -->
</testng-results>
